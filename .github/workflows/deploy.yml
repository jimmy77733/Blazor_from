# 工作流程的名稱
name: Deploy Blazor WASM to GitHub Pages

# 觸發條件：當推送到 main 或 master 分支時執行
on:
  push:
    branches: [ main, master ]

# 工作內容
jobs:
  build-and-deploy:
    # 執行此工作的虛擬機器環境
    runs-on: ubuntu-latest

    steps:
      # 步驟 1: 抓取你的程式碼
      - name: Checkout
        uses: actions/checkout@v3

      # 步驟 2: 安裝 .NET 8 SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 步驟 3: 發佈 .NET 專案
      # 執行最單純的發佈，讓 .NET 產生所有必要的 WASM 核心檔案
      - name: Publish .NET Project
        run: dotnet publish Blazor_from/Blazor_from.csproj -c Release --nologo

      # 步驟 4: 建立一個全新的、乾淨的部署資料夾結構
      # `mkdir -p` 可以確保即使資料夾已存在也不會報錯
      - name: Create deploy directory
        run: mkdir -p deploy/wwwroot/_framework

      # 步驟 5: 【關鍵修正】從正確的路徑複製 Blazor WASM 的核心檔案
      # 根據 dotnet publish 的實際輸出，我們從 'Blazor_from/bin/Release/net8.0/publish/wwwroot/_framework/' 複製
      - name: Copy framework files
        run: cp -r Blazor_from/bin/Release/net8.0/publish/wwwroot/_framework/* deploy/wwwroot/_framework/

      # 步驟 6: 將您專案中的靜態資源 (CSS, favicon等) 複製過去
      - name: Copy static assets
        run: cp -r Blazor_from/wwwroot/* deploy/wwwroot/

      # 步驟 7: 手動建立 index.html，並直接寫入所有正確的內容
      # 這是最可靠的方法，我們不再修改，而是直接生成最終版本
      - name: Create custom index.html
        run: |
          echo '<!DOCTYPE html>
          <html lang="zh-TW">
          <head>
              <meta charset="utf-8" />
              <meta name="viewport" content="width=device-width, initial-scale=1.0" />
              <title>Blazor From</title>
              <base href="/Blazor_from/" />
              <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
              <link href="css/app.css" rel="stylesheet" />
              <link href="Blazor_from.styles.css" rel="stylesheet" />
          </head>
          <body>
              <div id="app" class="d-flex justify-content-center align-items-center vh-100 h1 text-white-50">正在載入應用程式...</div>
              <script src="_framework/blazor.webassembly.js"></script>
          </body>
          </html>' > deploy/wwwroot/index.html

      # 步驟 8: 【偵錯】列出最終部署資料夾的內容，確保一切都已就緒
      - name: List final deploy directory contents
        run: ls -R deploy

      # 步驟 9: 部署我們手動建立好的 'deploy/wwwroot' 資料夾
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # 部署到 gh-pages 分支
          folder: deploy/wwwroot # 從這個資料夾部署

