# 工作流程的名稱
name: Deploy Blazor WASM to GitHub Pages

# 觸發條件：當推送到 main 或 master 分支時執行
on:
  push:
    branches: [ main, master ]

# 工作內容
jobs:
  build-and-deploy:
    # 執行此工作的虛擬機器環境
    runs-on: ubuntu-latest

    steps:
      # 步驟 1: 抓取你的程式碼
      - name: Checkout
        uses: actions/checkout@v3

      # 步驟 2: 安裝 .NET 8 SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 步驟 3: 發佈專案成 Blazor WASM
      # 這裡會將所有需要的靜態檔案輸出到 release 資料夾
      - name: Publish .NET Project
        # 【修正】在這裡加上了正確的專案資料夾路徑
        run: dotnet publish Blazor_from/Blazor_from.csproj -c Release -o release --nologo

      # 步驟 4: 修改 base href，這是讓 Blazor 在 GitHub Pages 上正常運作的關鍵！
      # 它會自動找到 index.html 並將 <base href="/" /> 修改成 <base href="/你的倉庫名稱/" />
      - name: Change base-tag in index.html
        run: sed -i 's/<base href="\/" \/>/<base href="\/Blazor_from\/" \/>/g' release/wwwroot/index.html
        
      # 步驟 5: 使用社群開發的強大 Action 來部署檔案
      # 它會將 release/wwwroot 資料夾中的所有內容，推送到一個名為 gh-pages 的特殊分支
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # 部署到 gh-pages 分支
          folder: release/wwwroot # 從這個資料夾部署

